{"version":3,"file":"dropdown.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;ACVa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,SAAS;AACzgBAAgB","sources":["webpack://components/webpack/universalModuleDefinition","webpack://components/./src/dropdown/Dropdown.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"components\"] = factory();\n\telse\n\t\troot[\"components\"] = factory();\n})(self, function() {\nreturn ","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Dropdown = void 0;\nfunction createDropdown(selector, content, type = 'left') {\n    let className = '';\n    let button = null;\n    if (type === 'left') {\n        className = 'dropdown_left';\n    }\n    if (type === 'right') {\n        className = 'dropdown_right';\n    }\n    if (typeof selector === 'string') {\n        button = document.querySelector(`[data-dropdown-open=\"${selector}\"]`);\n    }\n    if (selector instanceof Element) {\n        button = selector;\n    }\n    if (!button)\n        return;\n    const id = button.dataset.dropdownOpen;\n    if (!id)\n        return;\n    const dropdown = document.createElement('div');\n    dropdown.classList.add('dropdown', className);\n    dropdown.dataset.dropdown = id;\n    dropdown.innerHTML = `\n    <div class=\"dropdown__content\" data-dropdown-content>\n        ${content}\n        \n        <button data-dropdown-close>Ð¥</button>\n    </div>   \n  `;\n    // @ts-ignore\n    button.parentNode.insertBefore(dropdown, button.nextSibling);\n    dropdown.prepend(button);\n}\nfunction Dropdown() {\n    let _isOpen = false;\n    function open(id) {\n        const selector = `[data-dropdown=\"${id}\"]`;\n        const dropdown = document.querySelector(selector);\n        if (!dropdown)\n            return;\n        dropdown.classList.add('dropdown_open');\n        setTimeout(() => {\n            dropdown.classList.add('dropdown_visible');\n        }, 300);\n    }\n    function close(dropdown) {\n        dropdown.classList.remove('dropdown_visible');\n        setTimeout(() => {\n            dropdown.classList.remove('dropdown_open');\n        }, 200);\n    }\n    function closeAll() {\n        const selector = `[data-dropdown]`;\n        const dropdowns = Array.from(document.querySelectorAll(selector));\n        dropdowns.forEach(item => {\n            close(item);\n            // enablePageScroll(item);\n        });\n        // clearQueueScrollLocks();\n    }\n    function documentClickHandler(e) {\n        const target = e.target;\n        if (_isOpen) {\n            // Close all\n            const currentDropdown = target.closest('[data-dropdown]');\n            const closeBtn = target.closest('[data-dropdown-close]');\n            const openBtn = target.closest('[data-dropdown-open]');\n            if (!currentDropdown || closeBtn || openBtn) {\n                closeAll();\n                _isOpen = false;\n            }\n            // clearQueueScrollLocks();\n            // enablePageScroll(currentDropdown);\n        }\n        else {\n            const dropdownTrigger = target.closest('[data-dropdown-open]');\n            if (!dropdownTrigger)\n                return;\n            // Open\n            const id = dropdownTrigger.dataset.dropdownOpen;\n            if (id) {\n                open(id);\n                // disablePageScroll();\n                _isOpen = true;\n            }\n        }\n    }\n    function documentKeyupHandler(e) {\n        if (e.key === 'Escape') {\n            closeAll();\n            _isOpen = false;\n        }\n    }\n    function init() {\n        document.addEventListener('click', documentClickHandler);\n        document.addEventListener('keyup', documentKeyupHandler);\n    }\n    function destroy() {\n        document.removeEventListener('click', documentClickHandler);\n        document.removeEventListener('keyup', documentKeyupHandler);\n    }\n    return {\n        init,\n        destroy,\n        open,\n        close,\n        createDropdown\n    };\n}\nexports.Dropdown = Dropdown;\n"],"names":[],"sourceRoot":""}